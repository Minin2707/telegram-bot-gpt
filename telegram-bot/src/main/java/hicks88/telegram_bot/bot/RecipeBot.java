package hicks88.telegram_bot.bot;

import hicks88.telegram_bot.config.BotConfig;
import hicks88.telegram_bot.service.RecipeService;
import hicks88.telegram_bot.service.ValidationService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

@Slf4j
@Component
@RequiredArgsConstructor
public class RecipeBot extends TelegramLongPollingBot {

    private final BotConfig botConfig;
    private final RecipeService recipeService;
    private final ValidationService validationService;

    @Override
    public String getBotUsername() {
        return botConfig.getUsername();
    }

    @Override
    public String getBotToken() {
        return botConfig.getToken();
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();
            String userName = update.getMessage().getFrom().getUserName();

            log.info("Received message from user {} ({}): {}", userName, chatId, messageText);

            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
            if (messageText.equals("/start")) {
                sendWelcomeMessage(chatId);
                return;
            }

            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /help
            if (messageText.equals("/help")) {
                sendHelpMessage(chatId);
                return;
            }

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –∏–∑ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
            generateAndSendRecipes(chatId, messageText);
        }
    }

    private void sendWelcomeMessage(long chatId) {
        String welcomeMessage = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –≤–∫—É—Å–Ω—ã–µ –±–ª—é–¥–∞.\n\n" +
                "üìù –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –∏ —è –ø—Ä–µ–¥–ª–æ–∂—É 3 —Ä–µ—Ü–µ–ø—Ç–∞ –±–ª—é–¥, " +
                "–∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏–∑ –Ω–∏—Ö –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å.\n\n" +
                "–ü—Ä–∏–º–µ—Ä: –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å, —è–π—Ü–∞, –ª—É–∫, –º–∞—Å–ª–æ\n\n" +
                "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.";

        sendMessage(chatId, welcomeMessage);
    }

    private void sendHelpMessage(long chatId) {
        String helpMessage = "üç≥ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:\n\n" +
                "1. –ù–∞–ø–∏—à–∏ —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n" +
                "2. –Ø –ø—Ä–µ–¥–ª–æ–∂—É 3 —Ä–µ—Ü–µ–ø—Ç–∞ –±–ª—é–¥\n" +
                "3. –ö–∞–∂–¥—ã–π —Ä–µ—Ü–µ–ø—Ç –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ, –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ –ø–æ—à–∞–≥–æ–≤—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é\n\n" +
                "üìù –ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π:\n" +
                "‚Ä¢ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å, —è–π—Ü–∞, –ª—É–∫\n" +
                "‚Ä¢ –∫—É—Ä–∏—Ü–∞, —Ä–∏—Å, –º–æ—Ä–∫–æ–≤—å, –ª—É–∫\n" +
                "‚Ä¢ –º–æ–ª–æ–∫–æ, –º—É–∫–∞, —è–π—Ü–∞, —Å–∞—Ö–∞—Ä\n\n" +
                "‚ö†Ô∏è –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n" +
                "‚Ä¢ –ú–∏–Ω–∏–º—É–º 2 –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞\n" +
                "‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 20 –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤\n" +
                "‚Ä¢ –¢–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã –∏ –¥–µ—Ñ–∏—Å—ã\n\n" +
                "–ö–æ–º–∞–Ω–¥—ã:\n" +
                "/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" +
                "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞";

        sendMessage(chatId, helpMessage);
    }

    private void generateAndSendRecipes(long chatId, String ingredients) {
        // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        ValidationService.ValidationResult validationResult = validationService.validateIngredients(ingredients);

        if (!validationResult.isValid()) {
            sendMessage(chatId, "‚ùå " + validationResult.getErrorMessage());
            return;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –±–æ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å
        sendMessage(chatId, "üîç –ò—â—É —Ä–µ—Ü–µ–ø—Ç—ã –¥–ª—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤: " + ingredients + "\n\n‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...");

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ü–µ–ø—Ç—ã
        String recipes = recipeService.generateRecipes(ingredients);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        sendMessage(chatId, "üçΩÔ∏è –í–æ—Ç —á—Ç–æ –º–æ–∂–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å:\n\n" + recipes);
    }

    private void sendMessage(long chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        message.enableMarkdown(true);

        try {
            execute(message);
            log.info("Message sent to chat {}: {}", chatId, text.substring(0, Math.min(text.length(), 50)) + "...");
        } catch (TelegramApiException e) {
            log.error("Error sending message to chat {}: {}", chatId, e.getMessage());
        }
    }
}